type Post
  @model
  # @auth(rules: [{ allow: owner, queries: null }])
  @key(
    name: "postByDate"
    fields: ["type", "createdAt"]
    queryField: "postByDate"
  ) {
  id: ID!
  owner: String!
  title: String!
  content: String!
  public: Boolean!
  photo: S3Object
  view: Int
  like: Int
  comments: [Comment] @connection(name: "PostComments", sortField: "createdAt")
  type: String!
  category: [String]
  createdAt: String!
}

type Comment @model {
  id: ID!
  owner: String!
  content: String!
  like: Int
  createdAt: String!
  post: Post @connection(name: "PostComments", sortField: "createdAt")
  reply: [Reply] @connection(name: "CommentReply", sortField: "createdAt")
}

type Reply @model {
  id: ID!
  owner: String!
  content: String!
  like: Int
  createdAt: String!
  comment: Comment @connection(name: "CommentReply", sortField: "createdAt")
}

type Category @model {
  id: ID!
  owner: String!
  list: [String!]
  createdAt: String!
}

type User @model {
  id: ID!
  username: String!
  image: S3Object
  blogname: String
  description: String
  category: [String!]
  following: [String!]
  follower: [String!]
  email: String!
  createdAt: String!
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}
